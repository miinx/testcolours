{"version":3,"sources":["colors.js","App.js","serviceWorker.js","index.js"],"names":["Colors","mix","base","extra","Object","assign","styles","page","padding","container","display","justifyContent","flexWrap","demo","width","height","margin","alignItems","bullet","borderRadius","bulletSmaller","transform","bulletSmallest","Block","color","name","glowColor","bulletStyles","boxShadow","background","style","map","hexValue","backgroundColor","key","className","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6617e2f3.chunk.js","sourcesContent":["const Colors = [\n'#F44336',\n'#FFEBEE',\n'#FFCDD2',\n'#EF9A9A',\n'#E57373',\n'#EF5350',\n'#E53935',\n'#D32F2F',\n'#C62828',\n'#B71C1C',\n'#FF8A80',\n'#FF5252',\n'#FF1744',\n'#D50000',\n'#FCE4EC',\n'#F8BBD0',\n'#F48FB1',\n'#F06292',\n'#EC407A',\n'#E91E63',\n'#D81B60',\n'#C2185B',\n'#AD1457',\n'#880E4F',\n'#FF80AB',\n'#FF4081',\n'#F50057',\n'#C51162',\n'#F3E5F5',\n'#E1BEE7',\n'#CE93D8',\n'#BA68C8',\n'#AB47BC',\n'#9C27B0',\n'#8E24AA',\n'#7B1FA2',\n'#6A1B9A',\n'#4A148C',\n'#EA80FC',\n'#E040FB',\n'#D500F9',\n'#AA00FF',\n'#EDE7F6',\n'#D1C4E9',\n'#B39DDB',\n'#9575CD',\n'#7E57C2',\n'#673AB7',\n'#5E35B1',\n'#512DA8',\n'#4527A0',\n'#311B92',\n'#B388FF',\n'#7C4DFF',\n'#651FFF',\n'#6200EA',\n'#E8EAF6',\n'#C5CAE9',\n'#9FA8DA',\n'#7986CB',\n'#5C6BC0',\n'#3F51B5',\n'#3949AB',\n'#303F9F',\n'#283593',\n'#1A237E',\n'#8C9EFF',\n'#536DFE',\n'#3D5AFE',\n'#304FFE',\n'#E3F2FD',\n'#BBDEFB',\n'#90CAF9',\n'#64B5F6',\n'#42A5F5',\n'#2196F3',\n'#1E88E5',\n'#1976D2',\n'#1565C0',\n'#0D47A1',\n'#82B1FF',\n'#448AFF',\n'#2979FF',\n'#2962FF',\n'#E1F5FE',\n'#B3E5FC',\n'#81D4FA',\n'#4FC3F7',\n'#29B6F6',\n'#03A9F4',\n'#039BE5',\n'#0288D1',\n'#0277BD',\n'#01579B',\n'#80D8FF',\n'#40C4FF',\n'#00B0FF',\n'#0091EA',\n'#E0F7FA',\n'#B2EBF2',\n'#80DEEA',\n'#4DD0E1',\n'#26C6DA',\n'#00BCD4',\n'#00ACC1',\n'#0097A7',\n'#00838F',\n'#006064',\n'#84FFFF',\n'#18FFFF',\n'#00E5FF',\n'#00B8D4',\n'#E0F2F1',\n'#B2DFDB',\n'#80CBC4',\n'#4DB6AC',\n'#26A69A',\n'#009688',\n'#00897B',\n'#00796B',\n'#00695C',\n'#004D40',\n'#A7FFEB',\n'#64FFDA',\n'#1DE9B6',\n'#00BFA5',\n'#E8F5E9',\n'#C8E6C9',\n'#A5D6A7',\n'#81C784',\n'#66BB6A',\n'#4CAF50',\n'#43A047',\n'#388E3C',\n'#2E7D32',\n'#1B5E20',\n'#B9F6CA',\n'#69F0AE',\n'#00E676',\n'#00C853',\n'#F1F8E9',\n'#DCEDC8',\n'#C5E1A5',\n'#AED581',\n'#9CCC65',\n'#8BC34A',\n'#7CB342',\n'#689F38',\n'#558B2F',\n'#33691E',\n'#CCFF90',\n'#B2FF59',\n'#76FF03',\n'#64DD17',\n'#F9FBE7',\n'#F0F4C3',\n'#E6EE9C',\n'#DCE775',\n'#D4E157',\n'#CDDC39',\n'#C0CA33',\n'#AFB42B',\n'#9E9D24',\n'#827717',\n'#F4FF81',\n'#EEFF41',\n'#C6FF00',\n'#AEEA00',\n'#FFFDE7',\n'#FFF9C4',\n'#FFF59D',\n'#FFF176',\n'#FFEE58',\n'#FFEB3B',\n'#FDD835',\n'#FBC02D',\n'#F9A825',\n'#F57F17',\n'#FFFF8D',\n'#FFFF00',\n'#FFEA00',\n'#FFD600',\n'#FFF8E1',\n'#FFECB3',\n'#FFE082',\n'#FFD54F',\n'#FFCA28',\n'#FFC107',\n'#FFB300',\n'#FFA000',\n'#FF8F00',\n'#FF6F00',\n'#FFE57F',\n'#FFD740',\n'#FFC400',\n'#FFAB00',\n'#FFF3E0',\n'#FFE0B2',\n'#FFCC80',\n'#FFB74D',\n'#FFA726',\n'#FF9800',\n'#FB8C00',\n'#F57C00',\n'#EF6C00',\n'#E65100',\n'#FFD180',\n'#FFAB40',\n'#FF9100',\n'#FF6D00',\n'#FBE9E7',\n'#FFCCBC',\n'#FFAB91',\n'#FF8A65',\n'#FF7043',\n'#FF5722',\n'#F4511E',\n'#E64A19',\n'#D84315',\n'#BF360C',\n'#FF9E80',\n'#FF6E40',\n'#FF3D00',\n'#DD2C00',\n'#EFEBE9',\n'#D7CCC8',\n'#BCAAA4',\n'#A1887F',\n'#8D6E63',\n'#795548',\n'#6D4C41',\n'#5D4037',\n'#4E342E',\n'#3E2723',\n'#FAFAFA',\n'#F5F5F5',\n'#EEEEEE',\n'#E0E0E0',\n'#BDBDBD',\n'#9E9E9E',\n'#757575',\n'#616161',\n'#424242',\n'#212121',\n'#FFFFFF',\n'#ECEFF1',\n'#CFD8DC',\n'#B0BEC5',\n'#90A4AE',\n'#78909C',\n'#607D8B',\n'#546E7A',\n'#455A64',\n'#37474F',\n'#263238',\n'#000000'\n]\n\nexport default Colors\n","import React from 'react'\nimport Colors from './colors'\n\nconst mix = (base, ...extra) => Object.assign({}, base, ...extra)\n\nconst styles = {\n  page: {\n    padding: '50px'\n  },\n  container: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    flexWrap: 'wrap'\n  },\n  demo: {\n    width: '100px',\n    height: '50px',\n    margin: '5px 10px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  bullet: {\n    width: '6px',\n    height: '6px',\n    borderRadius: '100%',\n    margin: '4px'\n  },\n  bulletSmaller: {\n    transform: 'scale(0.66)'\n  },\n  bulletSmallest: {\n    transform: 'scale(0.33)'\n  }\n}\n\n\nconst Block = ({ color, name, glowColor }) => {\n\n  const bulletStyles = mix(\n    styles.bullet,\n    glowColor && { boxShadow: `0 0 3px ${glowColor}` },\n    { background: color }\n  )\n\n  return (\n    <>\n      <h1>{name}</h1>\n      <div style={styles.container}>\n        {\n          Colors.map((hexValue) => (\n            <div\n              style={mix( styles.demo, { backgroundColor: hexValue } )}\n              key={hexValue}\n              className='block'\n            >\n              <div style={mix(bulletStyles, styles.bulletSmallest)} />\n              <div style={mix(bulletStyles, styles.bulletSmaller)} />\n              <div style={mix(bulletStyles)} />\n              <div style={mix(bulletStyles, styles.bulletSmaller)} />\n              <div style={mix(bulletStyles, styles.bulletSmallest)} />\n            </div>\n          ))\n        }\n      </div>\n    </>\n  )\n}\n\nconst App = () => {\n  return (\n    <div style={styles.page}>\n      <Block color='#fff' name='White' />\n      <Block color='#000' name='Black' />\n      <Block color='#777' name='Grey' />\n\n      <Block color='#fff' name='White with #ddd glow' glowColor='#ddd' />\n      <Block color='#fff' name='White with #ccc glow' glowColor='#ccc' />\n      <Block color='#fff' name='White with #bbb glow' glowColor='#bbb' />\n      <Block color='#fff' name='White with #aaa glow' glowColor='#aaa' />\n      <Block color='#fff' name='White with #999 glow' glowColor='#999' />\n      <Block color='#fff' name='White with #888 glow' glowColor='#888' />\n      <Block color='#fff' name='White with #777 glow' glowColor='#777' />\n      <Block color='#fff' name='White with #666 glow' glowColor='#666' />\n\n      <Block color='#000' name='Black with #fff glow' glowColor='#fff' />\n      <Block color='#000' name='Black with #eee glow' glowColor='#eee' />\n      <Block color='#000' name='Black with #ddd glow' glowColor='#ddd' />\n      <Block color='#000' name='Black with #ccc glow' glowColor='#ccc' />\n      <Block color='#000' name='Black with #bbb glow' glowColor='#bbb' />\n      <Block color='#000' name='Black with #aaa glow' glowColor='#aaa' />\n      <Block color='#000' name='Black with #999 glow' glowColor='#999' />\n      <Block color='#000' name='Black with #888 glow' glowColor='#888' />\n      <Block color='#000' name='Black with #777 glow' glowColor='#777' />\n      <Block color='#000' name='Black with #666 glow' glowColor='#666' />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}